// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var Ivoire, md5,
    slice = [].slice;

  Ivoire = require('ivoire');

  md5 = require('MD5');

  Ivoire.prototype._get_one_of_cache = function() {
    if (!this._one_of_cache) {
      this._one_of_cache = {};
    }
    return this._one_of_cache;
  };

  Ivoire.prototype.one_of = function() {
    var hash, items, obj, one_of_cache, that;
    items = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    that = this;
    one_of_cache = this._get_one_of_cache();
    hash = md5(JSON.stringify(items));
    obj = one_of_cache[hash];
    if (!obj) {
      obj = one_of_cache[hash] = {
        cycling: (function() {
          var cycler, i;
          cycler = items.slice(0);
          i = -1;
          return function() {
            i += 1;
            if (i >= cycler.length) {
              i = 0;
            }
            return cycler[i];
          };
        })(),
        stopping: (function() {
          var cycler, i;
          cycler = items.slice(0);
          i = -1;
          return function() {
            i += 1;
            if (i >= cycler.length) {
              i = cycler.length - 1;
            }
            return cycler[i];
          };
        })(),
        randomly: (function() {
          var last_item;
          last_item = null;
          return function() {
            var item;
            item = last_item;
            while (item === last_item) {
              item = that.pick(items);
            }
            last_item = item;
            return item;
          };
        })(),
        truly_at_random: (function() {
          return function() {
            return that.pick(items);
          };
        })(),
        in_random_order: (function() {
          var cycler, i;
          cycler = that.shuffle(items);
          i = -1;
          return function() {
            i += 1;
            if (i >= cycler.length) {
              i = cycler.length - 1;
            }
            return cycler[i];
          };
        })()
      };
    }
    return obj;
  };

  module.exports = Ivoire;

}).call(this);
